{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>\ub17c\ubb38\uacfc \uad00\ub828 \uac1c\ub150\uc744 \uc704\ud0a4\ucc98\ub7fc \uc815\ub9ac\ud560 \uc608\uc815\uc785\ub2c8\ub2e4.</p>"},{"location":"#_1","title":"\ud0dc\uadf8 \ubaa9\ub85d \ubc0f \uc124\uba85","text":"<p>\uc774 \uacf3\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ubaa8\ub4e0 \ud0dc\uadf8\uc5d0 \ub300\ud55c \uc124\uba85\uc744 \uae30\ub85d\ud569\ub2c8\ub2e4.</p>"},{"location":"#_2","title":"\ub0b4\uc6a9 \uc791\uc131\uc774 \ud544\uc694\ud55c \ubb38\uc11c \uc77c\ub78c","text":"<p>Quantization and Training of Neural Networks for Efficient Integer-Arithmetic-Only Inference</p> <p>With Shared Microexponents, A Little Shifting Goes a Long Way</p>"},{"location":"#_3","title":"\ubb38\uc11c \uc815\ub9ac \uaddc\uce59","text":"<p>\uc77c\ub2e8\uc740 \ub144\ub3c4\ubcc4\ub85c \ubd84\ub958?</p>"},{"location":"%ED%83%9C%EA%B7%B8%20%EB%AA%A9%EB%A1%9D%20%EB%B0%8F%20%EC%84%A4%EB%AA%85/","title":"\ub144\ub3c4 \ud0dc\uadf8","text":"<p>\ub17c\ubb38\uc758 \uccab \uacf5\uac1c \ud559\ud68c, arXiv\uc758 \uacbd\uc6b0 \uacf5\uac1c \ub0a0\uc9dc\ub97c \uae30\uc900\uc73c\ub85c \ub144\ub3c4\ub97c \ubd84\ub9ac\ud569\ub2c8\ub2e4.</p>"},{"location":"%ED%83%9C%EA%B7%B8%20%EB%AA%A9%EB%A1%9D%20%EB%B0%8F%20%EC%84%A4%EB%AA%85/#y2023","title":"Y2023","text":""},{"location":"%ED%83%9C%EA%B7%B8%20%EB%AA%A9%EB%A1%9D%20%EB%B0%8F%20%EC%84%A4%EB%AA%85/#_2","title":"\ud559\ud68c","text":"<p>\uc5b4\ub514\uc5d0 \ub4f1\uc7a5\ud588\ub294\uc9c0 \ud559\ud68c\uc5d0 \ubd84\ub9ac\ud569\ub2c8\ub2e4.</p>"},{"location":"%ED%83%9C%EA%B7%B8%20%EB%AA%A9%EB%A1%9D%20%EB%B0%8F%20%EC%84%A4%EB%AA%85/#nips","title":"NIPS","text":""},{"location":"%ED%83%9C%EA%B7%B8%20%EB%AA%A9%EB%A1%9D%20%EB%B0%8F%20%EC%84%A4%EB%AA%85/#_3","title":"\ubd84\ub958","text":"<p>\ub17c\ubb38\uc758 \ub300\ubd84\ub958\ub97c</p>"},{"location":"%ED%83%9C%EA%B7%B8%20%EB%AA%A9%EB%A1%9D%20%EB%B0%8F%20%EC%84%A4%EB%AA%85/#quantization","title":"#Quantization","text":"<p>the process of constraining an input from a continuous or otherwise large set of values (such as the real numbers) to a discrete set (such as the integers)</p> <p>https://arxiv.org/pdf/2103.13630.pdf</p>"},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/","title":"Quantization and Training of Neural Networks for Efficient Integer-Arithmetic-Only Inference","text":"","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#y2018-cvpr-quantization","title":"Y2018 #CVPR #Quantization","text":"","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#introduction","title":"Introduction","text":"<p>\ub2e4\uc591\ud55c \ubaa9\uc801\uc758 \ub9ce\uc740 \uc778\uacf5\uc9c0\ub2a5 \uad00\ub828 \uc5f0\uad6c\ub294 \ud6a8\uc728\uc131\uc744 \uc704\ud574\uc11c \uc5f0\uc0b0 \uc18d\ub3c4\ub97c \uac1c\uc120\ud558\uae30 \uc704\ud55c \uc5ec\ub7ec \ub178\ub825\ub4e4\uc744 \ud574 \uc654\ub2e4. \uadf8 \uc911 \ud55c \ubc29\ud5a5\uc131\uc740 [[MobileNet]], [[SqueezeNet]], [[ShuffleNet]], [[DenseNet]]\uacfc \uac19\uc774 \uc0c8\ub85c\uc6b4 \ub124\ud2b8\uc6cc\ud06c \uad6c\uc870\ub97c \uc81c\uc548\ud574\uc11c \uc131\ub2a5\uc744 \uac1c\uc120\ud558\ub824\ub294 \uac83\uc774\uace0, \ub2e4\ub978 \ubc29\ud5a5\uc131\uc740 [[TWN]], [[BNN]], [[XNOR-net]]\uacfc \uac19\uc774 \ub0ae\uc740 bit width\uc744 \uc0ac\uc6a9\ud574\uc11c \uc131\ub2a5\uc744 \ud655\ubcf4\ud558\ub824\ub294 \ubc29\uc2dd\uc774\ub2e4.</p> <p>\uc774\uc804 \uc5f0\uad6c\ub4e4\uc740 \ub450 \uac00\uc9c0 \uc810\uc5d0\uc11c \ubd80\uc871\ud55c \ubd80\ubd84\uc774 \uc788\ub2e4. 1. \uccab \ubc88\uc9f8\ub294 \uc801\ub2f9\ud55c \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc558\ub2e4\ub294 \uc810\uc73c\ub85c, [[AlexNet]], [[VGG]], [[GoogleNet]]\uc758 \uacbd\uc6b0 \uc774\ubbf8 \ub124\ud2b8\uc6cc\ud06c \ud30c\ub77c\ubbf8\ud130\uac00 \ub108\ubb34 \ub9ce\uc544\uc11c \uc555\ucd95\uc744 \ub9ce\uc774 \uc9c4\ud589\ud558\ub354\ub77c\ub3c4 \uc131\ub2a5 \uc190\ud574\ub97c \ub9ce\uc774 \uc548 \ubcfc \uac00\ub2a5\uc131\uc774 \ud06c\ub2e4. \ub530\ub77c\uc11c [[MobileNet]]\uacfc \uac19\uc774 \uc774\ubbf8 \uc18d\ub3c4\ub97c \uc704\ud574\uc11c \uc5b4\ub290 \uc815\ub3c4 \uc815\ud655\ub3c4\ub97c \uc190\ud574 \ubcf4\uace0 \uc788\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ub300\uc0c1\uc73c\ub85c \uc2e4\ud5d8\ud558\ub294 \uac83\uc774 \ubc14\ub78c\uc9c1\ud558\ub2e4. 2. \ub450 \ubc88\uc9f8\ub294,  \uc2e4\uc81c \ud558\ub4dc\uc6e8\uc5b4\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5\ud55c \uc131\ub2a5 \uac1c\uc120\uc5d0 \ub300\ud55c \uacb0\uacfc\ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc774\ub2e4. weight\ub9cc \uc591\uc790\ud654\ud560 \ub54c, device\uc5d0 \uc62c\ub77c\uac00\ub294 \uba54\ubaa8\ub9ac \ud06c\uae30\ub9cc \uace0\ub824\ub418\uace0, \uc2e4\uc81c \uc5f0\uc0b0 \ud6a8\uc728\uc131\uc740 \uace0\ub824\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, \ud2b9\uc815\ud55c \uc5f0\uc0b0\ub3c4 \ucee4\uc2a4\ud140 \ud558\ub4dc\uc6e8\uc5b4\uc5d0\uc11c\ub294 \ube60\ub97c \uc218 \uc788\uc9c0\ub9cc, \uae30\uc874 \uc874\uc7ac\ud558\ub294 \ud558\ub4dc\uc6e8\uc5b4\uc5d0\uc11c\ub294 \ud574\ub2f9 \uc5f0\uc0b0\uc774 \uc5f0\uc0b0 \uc18d\ub3c4\uc5d0\uc11c \uc624\ud788\ub824 \uc190\ud574\ub97c \ubcfc \uc218 \uc788\ub2e4.</p> <p>\ub530\ub77c\uc11c, \uc774 \ub17c\ubb38\uc5d0\uc11c\ub294 - \uc591\uc790\ud654 \ubc29\ubc95 - \uc591\uc790\ud654 inference \ud504\ub808\uc784\uc6cc\ud06c - \uc591\uc790\ud654 training \ud504\ub808\uc784\uc6cc\ud06c - \uc720\uba85 ARM CPU \ub300\uc0c1\uc73c\ub85c \ud55c \ubca4\uce58\ub9c8\ud06c \ub97c \uc8fc \ud3ec\uc778\ud2b8\ub85c \ub0b4\uc138\uc6c0.</p>","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#_1","title":"\uc8fc\uc694 \ud3ec\uc778\ud2b8","text":"","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#quantized-inference","title":"\uc591\uc790\ud654 \ucd94\ub860 (Quantized Inference)","text":"","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#_2","title":"\uc591\uc790\ud654 \ubc29\uc2dd","text":"<p>\uc815\uc218 \uc5f0\uc0b0 (Integer Arithmetic)\ub9cc\uc744 \uc774\uc6a9\ud574\uc11c \uc591\uc790\ud654\ub41c \uac12\uc744 \uacc4\uc0b0\ud558\uace0, [[Affine Mapping]]\uacfc \ub3d9\uc77c\ud55c \ud6a8\uacfc(S, Z\ub294 \uc0c1\uc218)\ub97c \uac00\uc9d0 </p> \\[r = \uc2e4\uc81c\\ \uac12,\\ q = \uc591\uc790\ud654\ub41c\\ \uac12\\] \\[r = S(q-Z)\\] <p>\uc774 \uc5f0\uad6c\uc5d0\uc11c\ub294 \uac01 \ud150\uc11c(activation, weight)\ub9c8\ub2e4 S\uc640 Z\ub97c \ub530\ub85c\ub530\ub85c \uac00\uc9c0\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc74c. 8\ube44\ud2b8 \uc591\uc790\ud654\ubaa8\ub4dc\uc5d0\uc11c  q\ub294 8\ube44\ud2b8\ub85c \uc591\uc790\ud654\ub418\uace0, bias \uac19\uc740 \uac70\ub294 32\ube44\ud2b8 integer\ub97c \uc0ac\uc6a9\ud568. S(scale)\uc740 \uc801\ub2f9\ud55c \uc591\uc758 \uc2e4\uc218 \uac12\uc73c\ub85c, floating-point\ub85c \ud45c\ud604\ub428. Z(zero-point)\ub294 \uc591\uc790\ud654\ub41c \uac12 q\uc640 \uac19\uc740 \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c, \uc2e4\uc81c \uac12\uc778 r\uc774 0\uc774 \ub420 \uc218 \uc788\ub3c4\ub85d \uc870\uc815\ud574\uc8fc\ub294 \uc5ed\ud560\uc744 \uc218\ud589\ud568. \uc778\uacf5\uc9c0\ub2a5 \uc5f0\uc0b0\uc5d0\uc11c \ubc30\uc5f4 \uc8fc\ubcc0\uc5d0 0\uc744 \ucc44\uc6b0\uac70\ub098 \ud560 \ub54c \ud6a8\uc728\uc801\uc778 \uc5f0\uc0b0\uc744 \uc704\ud574\uc11c \uc874\uc7ac\ud568.  \uc2e4\uc81c \ub370\uc774\ud130 \ud0c0\uc785\uc744 \uc815\ub9ac\ud558\uba74 \uc544\ub798\uc640 \uac19\uc744 \uac83\uc784.</p> <pre><code>template // e.g. QType=uint8\nstruct QuantizedBuffer {\n  vector&lt;QType&gt; q; // the quantized values\n  float S; // the scale\n  QType Z; // the zero-point\n};\n</code></pre>","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#_3","title":"\uc815\uc218 \uc5f0\uc0b0\ub9cc \uc0ac\uc6a9\ud558\ub294 \ud589\ub82c\uacf1","text":"<p>\\(N \\times N\\) \ud589\ub82c \\(r_1\\), \\(r_2\\)\uc758 \uacf1\uc148\uc744 \ud574\uc11c \\(r_3\\)\uc774 \ub098\uc628\ub2e4\uace0 \ud588\uc744 \ub54c \\(r_\\alpha^{(i,j)} (1\\leq i,j \\leq N)\\) \ub85c \uac01 \ud589\ub82c\uc758 \uc131\ubd84\uc744 \ud45c\uc2dc\ud558\uace0, \\(S_\\alpha\\), \\(Z_\\alpha\\)\ub97c \uc591\uc790\ud654 \ud30c\ub77c\ubbf8\ud130\ub77c\uace0 \ub450\uba74, \uc591\uc790\ud654\ub41c \ud589\ub82c\uc758 \uacf1\uc744 \uc704\uc5d0 \uc788\ub294 \uc2dd\uc5d0 \ub530\ub77c\uc11c \uc591\uc790\ud654\ub41c \uac12\uc73c\ub85c \ud45c\ud604\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\uc2dc \uac00\ub2a5\ud558\ub2e4.</p> \\[S_3(q_3^{(i,k)}-Z_3)=\\sum_{j=1}^N{S_1(q_1^{(i,j)}-Z_1)S_2(q_2^{(j,k)}-Z_2)}\\] <p>\uac00 \ub418\uace0, \uc774\uac78 \ub2e4\uc2dc \ud45c\ud604\ud558\uba74 </p> \\[q_3^{(i,k)}=Z_3+M\\sum_{j=1}^N{(q_1^{(i,j)}-Z_1)(q_2^{(j,k)}-Z_2)}\\] <p>\uc5d0\uc11c \\(M:=\\frac{S_1S_2}{S_3}\\)\ub85c \ud45c\ud604\ub418\uace0, \ub530\ub77c\uc11c \uc815\uc218\uc5f0\uc0b0\uc774 \uc544\ub2cc \uac74 M\uc744 \uacf1\ud574\uc8fc\ub294 \uac83 \ubc16\uc5d0 \uc5c6\uac8c \ub41c\ub2e4.</p> <p>\uc5ec\uae30\uc11c, \uc5f0\uad6c\uc790\ub4e4\uc774 \uc774 \uac12\uc740 (0, 1) \uc0ac\uc774\uc758 \uac12\uc744 \uac00\uc9c4\ub2e4\ub294 \uac83\uc744 \uacbd\ud5d8\uc5d0 \uc758\ud574 \ucc3e\uc544\ub0c8\uace0, \ub530\ub77c\uc11c \uc77c\ubc18\uc801\uc778 \ud615\ud0dc\uc778 \\(M=2^{-n}M_0 , (0.5\\leq M_0&lt;1)\\)\ub85c \ud45c\uc2dc\ud560 \uc218 \uc788\ub2e4. \uc774\ub807\uac8c \ub418\uba74 int32 \ub370\uc774\ud130\ud615 \uae30\uc900\uc73c\ub85c \\(M_0\\)\ub97c \ud45c\ud604\ud558\uba74 \\(2^{31}M_0\\)\ub85c \ud45c\ud604 \uac00\ub2a5\ud558\uba70 (\uc815\uc218\ud615\uc73c\ub85c \ucc98\ub9ac\ud558\uae30 \uc704\ud574\uc11c), \\(M_0\\)\uc758 \uac12\uc774 1/2\ubcf4\ub2e4 \ud06c\uae30 \ub54c\ubb38\uc5d0 \uc5b8\uc81c\ub098 \uc704\uc758 \uac12\uc740 \\(2^{30}\\)\uc758 \uac12\uc744 \uac00\uc9c0\uace0, \ub530\ub77c\uc11c \ucd5c\uc18c 30bit \uc774\uc0c1\uc758 \uc720\uc758\ubbf8\ud55c \uac12\uc744 \uac00\uc9c8 \uc218 \uc788\ub2e4. \uadf8\ub9ac\uace0, \\(2^{-n}\\)\uc744 \uacf1\ud558\ub294 \uac83\uc740 \ud6a8\uc728\uc801\uc778 \ube44\ud2b8 \uc2dc\ud504\ud2b8 \uc5f0\uc0b0\uc73c\ub85c \ucc98\ub9ac\ud560 \uc218 \uc788\uace0, \uc804\uccb4 \ud504\ub85c\uc138\uc2a4\ub97c \uc815\uc218 \uacf1\uc148 \ubc0f \ub367\uc148 \uc5f0\uc0b0\ub9cc \uc0ac\uc6a9\ud574\uc11c \uc9c4\ud589\ud560 \uc218 \uc788\uac8c \ub41c\ub2e4. \uadf8\ub7f0\uc989, \ud6a8\uc728\uc801\uc778 \uc18d\ub3c4\ub85c \uc5f0\uc0b0\uc744 \ud560 \uc218 \uc788\ub2e4\ub294 \ub9d0\uc774 \ub41c\ub2e4! \ud83e\uddd0</p>","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#zero-pointz","title":"Zero-point(\\(Z\\))\uc758 \ud6a8\uc728\uc801\uc778 \ucc98\ub9ac \ubc29\ubc95","text":"<p>\uc704 \uc5f0\uc0b0\uc5d0\uc11c \\(2N^3\\) \uac1c\uc218\uc758 \ube84\uc148\uc744 \ud574\uc57c \ud558\ub294\ub370, \uadf8\uac78 \ud558\uc9c0 \uc54a\uace0 \uac00\ub2a5\ud55c \ud6a8\uc728\uc801\uc73c\ub85c \uc9c4\ud589\ud558\ub824\uba74, \uc704 \uc5f0\uc0b0 \uacc4\uc0b0\uc2dd\uc744 \uc544\ub798\ucc98\ub7fc \ud480\uc5b4\uc11c \uc4f8 \uc218 \uc788\uace0,</p> \\[q_3^{(i,k)}=Z_3+M(NZ_1Z_2-Z_1a_2^{(k)}-Z_2\\bar{a}_1^{(i)}+\\sum_{j=1}^N{q_1^{(i,j)}q_2^{(j,k)}}\\] \\[a_2^{(k)}:=\\sum_{j=1}^Nq_2^{(j,k)}+\\bar{a}_1^{(i)}:=\\sum_{j=1}^Nq_1^{i,j}\\] <p>\uc2dd\uc774 \ubcf5\uc7a1\ud574 \ubcf4\uc774\uc9c0\ub9cc \uadf8\ub0e5 \ud589\ub82c \uacf1\uc148\uc744 \uc6d0\uc18c\ubcc4\ub85c \ud480\uc5b4\ub0c8\uc9c0\ub9cc, \\(Z_1\\)\uacfc \\(q_2\\)\uacf1\ud55c \uac83\uacfc \\(Z_2\\)\uc640 \\(q_1\\)\uc744 \uacf1\ud55c \uac83\uc744 \ub530\ub85c \ube7c\ub0b8 \uac83 \ubfd0. \uadf8\ub798\uc11c \uc704 \uc5f0\uc0b0\uc5d0\uc11c \\(a_2^{(k)}, \\bar{a}_1^{(i)}\\)\ub294 \uac01\uac01 \\(N\\)\uac1c\ub9cc \uc5f0\uc0b0\uc774 \uc788\uc73c\ub2c8\uae4c \ucd1d \ub367\uc148 \uac1c\uc218\ub294 \\(2N^2\\)\uac1c\ub77c\uace0 \ud560 \uc218 \uc788\uace0, \ub098\uba38\uc9c0 \\(q_1\\)\uacfc \\(q_2\\)\ub97c \uacf1\ud558\ub294\ub370 \\(2N^3\\)\uac1c\uc758 \uc5f0\uc0b0\uc774 \ub4e4\uc5b4\uac04\ub2e4. \uadf8\ub798\uc11c Zero-point\ub97c \uacc4\uc0b0\ud558\ub294 \uacfc\uc815\uc740 \ud070 \uc5f0\uc0b0 \ubd80\ub2f4\uc774 \uc5c6\ub2e4.</p>","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#fused","title":"\uc77c\ubc18\uc801\uc778 fused \ub808\uc774\uc5b4 \uad6c\ud604","text":"<p>https://github.com/google/gemmlowp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc774\uc6a9\ud574, <code>GemmWithOutputPipeline</code> \uc5d4\ud2b8\ub9ac \ud3ec\uc778\ud2b8\uac00 \uc774 \uc5f0\uad6c\uc5d0\uc11c \uc81c\uc548\ud558\ub294 fused \uc5f0\uc0b0\uc744 \uc2dc\ud589\ud588\ub2e4. \ub450 \uc785\ub825(Acivation, Weight) \ud589\ub82c\uc740 <code>uint8</code> \ub370\uc774\ud130\ud615\uc744 \uc0ac\uc6a9\ud558\uace0, \uacf1\uc149 \uacb0\uacfc\ub294 32-bit\ub97c \uc694\uad6c\ud558\ub294\ub370 \uc5f0\uad6c\uc790\ub4e4\uc740 signed\ub41c 32-bit int\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \uadf8 \ub2e4\uc74c bias\uc640 \\(Z\\), \\(S\\)\ub97c \ucc98\ub9ac\ud568. bias \ucc98\ub9ac\uc5d0\ub294 \ub192\uc740 \uc5f0\uc0b0 \uc815\ubc00\ub3c4(Precision)\uc744 \uc694\uad6c\ud558\ub294\ub370, \uadf8 \uc774\uc720\ub294 bias\uac00 \ub9ce\uc740 \uacf3\uc5d0 \ub354\ud574\uc9c0\ub294 \ub9cc\ud07c \uc5ec\uae30\uc11c \uc0dd\uae30\ub294 \uc591\uc790\ud654\uc5d0 \uc758\ud574 \uc0dd\uae30\ub294 \ucc28\uc774\uac00 bias \uadf8 \uc790\uccb4\uac00 \ub418\uc5b4\ubc84\ub9ac\uae30 \ub54c\ubb38\uc774\ub2e4(\ud3c9\uade0\uc774 0\uc774 \uc544\ub2cc \uc624\ucc28\uac12). \uadf8 \uc774\ud6c4, \ucd5c\uc885 8-bit \ucd9c\ub825\uc744 \uc704\ud574\uc11c \uc22b\uc790\uc758 \uc2a4\ucf00\uc77c\uc744 \uc904\uc774\uace0, <code>uint8</code>\ub85c \ud615\uc2dd\uc744 \ubcc0\uacbd\ud55c\ub2e4(Saturating Cast). \uadf8 \ub2e4\uc74c, \ud65c\uc131\ud654 \ud568\uc218(Activation Function)\uc744 \uc0ac\uc6a9\ud574 \ucd5c\uc885 8-bit \ucd9c\ub825\uc774 \ub098\uc624\ub3c4\ub85d \ud558\ub294\ub370, \uc5ec\uae30\uc11c\ub294 \ud65c\uc131\ud654 \ud568\uc218\ub85c ReLU, ReLU6\uc640 \uac19\uc740 \ud074\ub7a8\ud551 \ud568\uc218\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \uc774 \ud074\ub7a8\ud551\ub418\ub294 \ud568\uc218\ub294 <code>[0, 255]</code> \ubc94\uc704 \uc804\uccb4\ub85c \ubc30\uc815\ud558\uc9c0 \uc54a\uace0 \uc774 \uc911 \uc77c\ubd80\uc5d0 \ubc30\uc815\ub418\ub3c4\ub85d \ud55c\ub2e4.</p>","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#_4","title":"\uc2dc\ubbac\ub808\uc774\uc158\ub41c \uc591\uc790\ud654\ub97c \uc774\uc6a9\ud55c \ud559\uc2b5","text":"<p>\ud559\uc2b5 \uc885\ub8cc \ud6c4 \ucd94\ub860\uc744 \uc704\ud574\uc11c \uc591\uc790\ud654\ub97c \ud558\ub294 \ubc29\uc2dd\uc5d0 \ubcf4\ud1b5 \ud06c\uac8c \uc2e4\uc218\ud558\ub294 \uac83\ub4e4\uc740 1. \ub2e4\ub978 output \ucc44\ub110\uc5d0 \ub530\ub77c weight\uc758 \ucd5c\uc19f\uac12\uacfc \ucd5c\ub313\uac12 \ubc94\uc704\uac00 \ub108\ubb34 \ud06c\uac8c \ucc28\uc774\ub098\ub294 \uac83(100\ubc30 \uc774\uc0c1) 2. \uc591\uc790\ud654 \uc774\ud6c4 \uc77c\ubd80 \uc608\uc678\uac12(outlier)\uc774 weight\uc744 \uac70\uc758 \uc804\ubd80\ub97c \uc4f8\ubaa8 \uc5c6\uac8c \ub9cc\ub4e4\uc5b4 \ubc84\ub9ac\ub294 \uac83 \uc774 \uc788\ub2e4. \uc5ec\uae30\uc11c \uc774 \uc5f0\uad6c\uc5d0\uc11c\ub294 \ud559\uc2b5 \uc911\uac04\uc5d0 forward pass\ub97c \ud558\ub294 \uacfc\uc815\uc5d0\uc11c \uc591\uc790\ud654\ub97c \uc2dc\ubbac\ub808\uc774\uc158\ud558\ub294 \ubc29\uc2dd\uc744 \uc81c\uc548\ud55c\ub2e4.</p>","tags":["Y2018","#CVPR","#Quantization"]},{"location":"100_Quantization/Quantization%20and%20Training%20of%20Neural%20Networks%20for%20Efficient%20Integer-Arithmetic-Only%20Inference/#_5","title":"\ud070 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c\uc758 \uc591\uc790\ud654 \ud559\uc2b5","text":"","tags":["Y2018","#CVPR","#Quantization"]}]}